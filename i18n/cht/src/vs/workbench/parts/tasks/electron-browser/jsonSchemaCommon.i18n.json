/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"JsonSchema.args": "傳遞至命令的其他引數。",
	"JsonSchema.background": "執行的工作是否保持運作且正在背景執行。",
	"JsonSchema.command": "要執行的命令。可以是外部程式或殼層命令。",
	"JsonSchema.echoCommand": "控制是否將執行的命令傳到輸出。預設為 False。",
	"JsonSchema.matchers": "要使用的問題比對器。可以是字串或問題比對器定義，或是字串和問題比對器陣列。",
	"JsonSchema.options": "其他命令選項",
	"JsonSchema.options.cwd": "所執行程式或指令碼的目前工作目錄。如果省略，則會使用 Code 的目前工作區根目錄。",
	"JsonSchema.options.env": "所執行程式或殼層的環境。如果省略，則會使用父處理序的環境。",
	"JsonSchema.pattern.code": "問題之代碼的符合群組索引。預設為未定義",
	"JsonSchema.pattern.column": "問題行中字元的符合群組索引。預設為 3",
	"JsonSchema.pattern.endColumn": "問題之結尾行字元的符合群組索引。預設為未定義",
	"JsonSchema.pattern.endLine": "問題之結尾行的符合群組索引。預設為未定義",
	"JsonSchema.pattern.file": "檔案名稱的符合群組索引。如果省略，則會使用 1。",
	"JsonSchema.pattern.line": "問題之行的符合群組索引。預設為 2",
	"JsonSchema.pattern.location": "問題之位置的符合群組索引。有效的位置模式為: (line)、(line,column) 和 (startLine,startColumn,endLine,endColumn)。如果省略，則會假設 (line,column)。",
	"JsonSchema.pattern.loop": "在多行比對器迴圈中，指出此模式是否只要相符就會以迴圈執行。只能在多行模式中的最後一個模式指定。",
	"JsonSchema.pattern.message": "訊息的符合群組索引。如果省略並指定位置，預設為 4。否則預設為 5。",
	"JsonSchema.pattern.regexp": "規則運算式，用來在輸出中尋找錯誤、警告或資訊。",
	"JsonSchema.pattern.severity": "問題之嚴重性的符合群組索引。預設為未定義",
	"JsonSchema.problemMatcher.applyTo": "控制文字文件上所回報的問題僅會套用至開啟的文件、關閉的文件或所有文件。",
	"JsonSchema.problemMatcher.base": "所要使用基本問題比對器的名稱。",
	"JsonSchema.problemMatcher.fileLocation": "定義問題模式中所回報檔案名稱的解譯方式。",
	"JsonSchema.problemMatcher.owner": "Code 內的問題擁有者。如果指定基底，則可以省略。如果省略且未指定基底，預設為 [外部]。",
	"JsonSchema.problemMatcher.pattern": "問題模式或已預先定義問題模式的名稱。如果已指定基底，則可以省略。",
	"JsonSchema.problemMatcher.severity": "擷取項目問題的預設嚴重性。如果模式未定義嚴重性的符合群組，就會加以使用。",
	"JsonSchema.problemMatcher.watchedBegin": "規則運算式，指示監看的工作開始執行 (透過檔案監看觸發)。",
	"JsonSchema.problemMatcher.watchedEnd": "規則運算式，指示監看的工作結束執行。",
	"JsonSchema.problemMatcher.watching.activeOnStart": "如果設定為 True，監控程式在工作啟動時處於主動模式。這相當於發出符合 beginPattern 的行",
	"JsonSchema.problemMatcher.watching.beginsPattern": "如果在輸出中相符，則會指示監看工作開始。",
	"JsonSchema.problemMatcher.watching.endsPattern": "如果在輸出中相符，則會指示監看工作結束。",
	"JsonSchema.promptOnClose": "是否在 VSCode 以執行中的背景工作關閉時提示使用者。",
	"JsonSchema.shell.args": "殼層引數。",
	"JsonSchema.shell.executable": "要使用的殼層。",
	"JsonSchema.showOutput": "控制是否顯示執行中工作的輸出。如果省略，則會使用 [永遠]。",
	"JsonSchema.suppressTaskName": "控制是否將工作名稱當做引數加入命令中。預設為 False。",
	"JsonSchema.taskSelector": "前置詞，表示引數是工作。",
	"JsonSchema.tasks": "工作組態。這些通常是在外部工作執行器中已定義的工作擴充。",
	"JsonSchema.tasks.args": "叫用此工作時，傳遞至命令的引數。",
	"JsonSchema.tasks.background": "執行的工作是否保持運作且正在背景執行。",
	"JsonSchema.tasks.build": "將此工作對應至 Code 的預設建置命令。",
	"JsonSchema.tasks.linux": "Linux 特定命令組態",
	"JsonSchema.tasks.mac": "Mac 特定命令組態",
	"JsonSchema.tasks.matchers": "要使用的問題比對器。可以是字串或問題比對器定義，或是字串和問題比對器陣列。",
	"JsonSchema.tasks.promptOnClose": "是否在 VS Code 有執行中工作的狀態下關閉時提示使用者。",
	"JsonSchema.tasks.showOutput": "控制是否顯示執行中工作的輸出。如果省略，則會使用全域定義的值。",
	"JsonSchema.tasks.suppressTaskName": "控制是否將工作名稱當做引數加入命令中。如果省略，則會使用全域定義的值。",
	"JsonSchema.tasks.taskName": "工作的名稱",
	"JsonSchema.tasks.test": "將此工作對應至 Code 的預設測試命令。",
	"JsonSchema.tasks.watching": "執行的工作是否保持運作且正在監看檔案系統。",
	"JsonSchema.tasks.watching.deprecation": "已被取代。請改用 isBackground。",
	"JsonSchema.tasks.windows": "Windows 特定命令組態",
	"JsonSchema.watching": "執行的工作是否保持運作且正在監看檔案系統。",
	"JsonSchema.watching.deprecation": "已被取代。請改用 isBackground。",
	"JsonSchema.watchingPattern.file": "檔案名稱的符合群組索引。可以省略。",
	"JsonSchema.watchingPattern.regexp": "規則運算式，用來偵測監看工作開始或結束。"
}